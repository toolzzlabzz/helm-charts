web:
  enabled: true
  replicaCount: 1
  image:
    repository: ghcr.io/novuhq/novu/web
    pullPolicy: IfNotPresent
    tag: "2.0.1"
  imagePullSecrets: []
  nameOverride: ""
  fullnameOverride: ""

  serviceAccount:
    # Specifies whether a service account should be created
    create: true
    # Automatically mount a ServiceAccount's API credentials?
    automount: true
    # Annotations to add to the service account
    annotations: {}
    # The name of the service account to use.
    # If not set and create is true, a name is generated using the fullname template
    name: ""

  podAnnotations: {}
  podLabels: {}

  podSecurityContext: {}
    # fsGroup: 2000

  securityContext: {}
    # capabilities:
    #   drop:
    #   - ALL
    # readOnlyRootFilesystem: true
    # runAsNonRoot: true
    # runAsUser: 1000

  service:
    type: ClusterIP
    port: 80
    targetPort: 4200

  ingress:
    enabled: false
    className: ""
    annotations: {}
      # kubernetes.io/ingress.class: nginx
      # kubernetes.io/tls-acme: "true"
    hosts:
      - host: chart-example.local
        paths:
          - path: /
            pathType: ImplementationSpecific
    tls: []
    #  - secretName: chart-example-tls
    #    hosts:
    #      - chart-example.local

  resources: 
    # We usually recommend not to specify default resources and to leave this as a conscious
    # choice for the user. This also increases chances charts run on environments with little
    # resources, such as Minikube. If you do want to specify resources, uncomment the following
    # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
    limits:
      cpu: 100m
      memory: 128Mi
    requests:
      cpu: 100m
      memory: 128Mi
  
  env:
    - name: REACT_APP_API_URL
      value: ""      
    - name: REACT_APP_ENVIRONMENT
      value: ""  
    - name: REACT_APP_WIDGET_EMBED_PATH
      value: ""
    - name: REACT_APP_IS_SELF_HOSTED
      value: ""
    - name: REACT_APP_WS_URL
      value: ""


  livenessProbe: ~
    # httpGet:
    #   path: /
    #   port: http
  readinessProbe: ~
    # httpGet:
    #   path: /
    #   port: http

  autoscaling:
    enabled: false
    minReplicas: 1
    maxReplicas: 100
    targetCPUUtilizationPercentage: 80
    # targetMemoryUtilizationPercentage: 80

  # Additional volumes on the output Deployment definition.
  volumes: []
  # - name: foo
  #   secret:
  #     secretName: mysecret
  #     optional: false

  # Additional volumeMounts on the output Deployment definition.
  volumeMounts: []
  # - name: foo
  #   mountPath: "/etc/foo"
  #   readOnly: true

  nodeSelector: {}

  tolerations: []

  affinity: {}

api:
  enabled: false
  replicaCount: 1
  image:
    repository: ghcr.io/novuhq/novu/api
    pullPolicy: IfNotPresent
    tag: "2.0.1"

  imagePullSecrets: []
  nameOverride: ""
  fullnameOverride: ""

  serviceAccount:
    # Specifies whether a service account should be created
    create: true
    # Automatically mount a ServiceAccount's API credentials?
    automount: true
    # Annotations to add to the service account
    annotations: {}
    # The name of the service account to use.
    # If not set and create is true, a name is generated using the fullname template
    name: ""

  podAnnotations: {}
  podLabels: {}

  podSecurityContext: {}
    # fsGroup: 2000

  securityContext: {}
    # capabilities:
    #   drop:
    #   - ALL
    # readOnlyRootFilesystem: true
    # runAsNonRoot: true
    # runAsUser: 1000

  service:
    type: ClusterIP
    port: 3000

  ingress:
    enabled: false
    className: ""
    annotations: {}
      # kubernetes.io/ingress.class: nginx
      # kubernetes.io/tls-acme: "true"
    hosts:
      - host: chart-example.local
        paths:
          - path: /
            pathType: ImplementationSpecific
    tls: []
    #  - secretName: chart-example-tls
    #    hosts:
    #      - chart-example.local

  resources: 
    # We usually recommend not to specify default resources and to leave this as a conscious
    # choice for the user. This also increases chances charts run on environments with little
    # resources, such as Minikube. If you do want to specify resources, uncomment the following
    # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
    limits:
      cpu: 100m
      memory: 128Mi
    requests:
      cpu: 100m
      memory: 128Mi
  
  env:
    - name: NODE_ENV
      value: ""
    - name: API_ROOT_URL
      value: ""      
    - name: DISABLE_USER_REGISTRATION
      value: ""
    - name: PORT
      value: ""
    - name: FRONT_BASE_URL
      value: ""
    - name: MONGO_URL
      value: ""
    - name: MONGO_MIN_POOL_SIZE
      value: ""
    - name: MONGO_MAX_POOL_SIZE
      value: ""
    - name: REDIS_HOST
      value: ""
    - name: REDIS_PORT
      value: ""
    - name: REDIS_PASSWORD
      value: ""
    - name: REDIS_DB_INDEX
      value: ""
    - name: REDIS_CACHE_SERVICE_HOST
      value: ""
    - name: REDIS_CACHE_SERVICE_PORT
      value: ""
    - name: S3_LOCAL_STACK
      value: ""
    - name: S3_BUCKET_NAME
      value: ""
    - name: S3_REGION
      value: ""
    - name: AWS_ACCESS_KEY_ID
      value: ""
    - name: AWS_SECRET_ACCESS_KEY
      value: ""
    - name: STORE_ENCRYPTION_KEY
      value: ""
    - name: SENTRY_DSN
      value: ""
    - name: NEW_RELIC_APP_NAME
      value: ""
    - name: NEW_RELIC_LICENSE_KEY
      value: ""
    - name: BROADCAST_QUEUE_CHUNK_SIZE
      value: ""
    - name: MULTICAST_QUEUE_CHUNK_SIZE
      value: ""


  livenessProbe:
    httpGet:
      path: /
      port: http
  readinessProbe:
    httpGet:
      path: /
      port: http

  autoscaling:
    enabled: false
    minReplicas: 1
    maxReplicas: 100
    targetCPUUtilizationPercentage: 80
    # targetMemoryUtilizationPercentage: 80

  # Additional volumes on the output Deployment definition.
  volumes: []
  # - name: foo
  #   secret:
  #     secretName: mysecret
  #     optional: false

  # Additional volumeMounts on the output Deployment definition.
  volumeMounts: []
  # - name: foo
  #   mountPath: "/etc/foo"
  #   readOnly: true

  nodeSelector: {}

  tolerations: []

  affinity: {}

ws:
  enabled: false
  replicaCount: 1
  image:
    repository: ghcr.io/novuhq/novu/ws
    pullPolicy: IfNotPresent
    tag: "2.0.1"

  imagePullSecrets: []
  nameOverride: ""
  fullnameOverride: ""

  serviceAccount:
    # Specifies whether a service account should be created
    create: true
    # Automatically mount a ServiceAccount's API credentials?
    automount: true
    # Annotations to add to the service account
    annotations: {}
    # The name of the service account to use.
    # If not set and create is true, a name is generated using the fullname template
    name: ""

  podAnnotations: {}
  podLabels: {}

  podSecurityContext: {}
    # fsGroup: 2000

  securityContext: {}
    # capabilities:
    #   drop:
    #   - ALL
    # readOnlyRootFilesystem: true
    # runAsNonRoot: true
    # runAsUser: 1000

  service:
    type: ClusterIP
    port: 3002

  ingress:
    enabled: false
    className: ""
    annotations: {}
      # kubernetes.io/ingress.class: nginx
      # kubernetes.io/tls-acme: "true"
    hosts:
      - host: chart-example.local
        paths:
          - path: /
            pathType: ImplementationSpecific
    tls: []
    #  - secretName: chart-example-tls
    #    hosts:
    #      - chart-example.local

  resources: 
    # We usually recommend not to specify default resources and to leave this as a conscious
    # choice for the user. This also increases chances charts run on environments with little
    # resources, such as Minikube. If you do want to specify resources, uncomment the following
    # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
    limits:
      cpu: 100m
      memory: 128Mi
    requests:
      cpu: 100m
      memory: 128Mi
  
  env:
    - name: NODE_ENV
      value: ""
    - name: PORT
      value: ""
    - name: MONGO_URL
      value: ""
    - name: MONGO_MAX_POOL_SIZE
      value: ""
    - name: REDIS_HOST
      value: ""
    - name: REDIS_PORT
      value: ""
    - name: REDIS_PASSWORD
      value: ""
    - name: JWT_SECRET
      value: ""
    - name: WS_CONTEXT_PATH
      value: ""
    - name: NEW_RELIC_APP_NAME
      value: ""
    - name: NEW_RELIC_LICENSE_KEY
      value: ""        






  livenessProbe:
    httpGet:
      path: /
      port: http
  readinessProbe:
    httpGet:
      path: /
      port: http

  autoscaling:
    enabled: false
    minReplicas: 1
    maxReplicas: 100
    targetCPUUtilizationPercentage: 80
    # targetMemoryUtilizationPercentage: 80

  # Additional volumes on the output Deployment definition.
  volumes: []
  # - name: foo
  #   secret:
  #     secretName: mysecret
  #     optional: false

  # Additional volumeMounts on the output Deployment definition.
  volumeMounts: []
  # - name: foo
  #   mountPath: "/etc/foo"
  #   readOnly: true

  nodeSelector: {}

  tolerations: []

  affinity: {}

worker:
  enabled: false
  replicaCount: 1
  image:
    repository: ghcr.io/novuhq/novu/worker
    pullPolicy: IfNotPresent
    tag: "2.0.1"

  imagePullSecrets: []
  nameOverride: ""
  fullnameOverride: ""

  serviceAccount:
    # Specifies whether a service account should be created
    create: true
    # Automatically mount a ServiceAccount's API credentials?
    automount: true
    # Annotations to add to the service account
    annotations: {}
    # The name of the service account to use.
    # If not set and create is true, a name is generated using the fullname template
    name: ""

  podAnnotations: {}
  podLabels: {}

  podSecurityContext: {}
    # fsGroup: 2000

  securityContext: {}
    # capabilities:
    #   drop:
    #   - ALL
    # readOnlyRootFilesystem: true
    # runAsNonRoot: true
    # runAsUser: 1000

  service:
    type: ClusterIP
    port: 80

  ingress:
    enabled: false
    className: ""
    annotations: {}
      # kubernetes.io/ingress.class: nginx
      # kubernetes.io/tls-acme: "true"
    hosts:
      - host: chart-example.local
        paths:
          - path: /
            pathType: ImplementationSpecific
    tls: []
    #  - secretName: chart-example-tls
    #    hosts:
    #      - chart-example.local

  resources: 
    # We usually recommend not to specify default resources and to leave this as a conscious
    # choice for the user. This also increases chances charts run on environments with little
    # resources, such as Minikube. If you do want to specify resources, uncomment the following
    # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
    limits:
      cpu: 100m
      memory: 128Mi
    requests:
      cpu: 100m
      memory: 128Mi
  
  env:
    - name: NODE_ENV
      value: ""
    - name: MONGO_URL
      value: ""
    - name: MONGO_MAX_POOL_SIZE
      value: ""
    - name: REDIS_HOST
      value: "redis"
    - name: REDIS_PORT
      value: "6379"
    - name: REDIS_PASSWORD
      value: ""
    - name: REDIS_DB_INDEX
      value: "1"
    - name: REDIS_CACHE_SERVICE_HOST
      value: ""
    - name: REDIS_CACHE_SERVICE_PORT
      value: ""
    - name: S3_LOCAL_STACK
      value: ""
    - name: S3_BUCKET_NAME
      value: ""
    - name: S3_REGION
      value: ""
    - name: AWS_ACCESS_KEY_ID
      value: ""
    - name: AWS_SECRET_ACCESS_KEY
      value: ""
    - name: STORE_ENCRYPTION_KEY
      value: ""    
    - name: SENTRY_DSN
      value: ""      
    - name: NEW_RELIC_APP_NAME
      value: ""        
    - name: NEW_RELIC_LICENSE_KEY
      value: "" 
    - name: BROADCAST_QUEUE_CHUNK_SIZE
      value: "100" 
    - name: MULTICAST_QUEUE_CHUNK_SIZE
      value: "100" 

  livenessProbe:
    httpGet:
      path: /
      port: http
  readinessProbe:
    httpGet:
      path: /
      port: http

  autoscaling:
    enabled: false
    minReplicas: 1
    maxReplicas: 100
    targetCPUUtilizationPercentage: 80
    # targetMemoryUtilizationPercentage: 80

  # Additional volumes on the output Deployment definition.
  volumes: []
  # - name: foo
  #   secret:
  #     secretName: mysecret
  #     optional: false

  # Additional volumeMounts on the output Deployment definition.
  volumeMounts: []
  # - name: foo
  #   mountPath: "/etc/foo"
  #   readOnly: true

  nodeSelector: {}

  tolerations: []

  affinity: {}

webhook:
  enabled: false
  replicaCount: 1
  image:
    repository: ghcr.io/novuhq/novu/webhook
    pullPolicy: IfNotPresent
    tag: "2.0.1"

  imagePullSecrets: []
  nameOverride: ""
  fullnameOverride: ""

  serviceAccount:
    # Specifies whether a service account should be created
    create: true
    # Automatically mount a ServiceAccount's API credentials?
    automount: true
    # Annotations to add to the service account
    annotations: {}
    # The name of the service account to use.
    # If not set and create is true, a name is generated using the fullname template
    name: ""

  podAnnotations: {}
  podLabels: {}

  podSecurityContext: {}
    # fsGroup: 2000

  securityContext: {}
    # capabilities:
    #   drop:
    #   - ALL
    # readOnlyRootFilesystem: true
    # runAsNonRoot: true
    # runAsUser: 1000

  service:
    type: ClusterIP
    port: 3000

  ingress:
    enabled: false
    className: ""
    annotations: {}
      # kubernetes.io/ingress.class: nginx
      # kubernetes.io/tls-acme: "true"
    hosts:
      - host: chart-example.local
        paths:
          - path: /
            pathType: ImplementationSpecific
    tls: []
    #  - secretName: chart-example-tls
    #    hosts:
    #      - chart-example.local

  resources: 
    # We usually recommend not to specify default resources and to leave this as a conscious
    # choice for the user. This also increases chances charts run on environments with little
    # resources, such as Minikube. If you do want to specify resources, uncomment the following
    # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
    limits:
      cpu: 100m
      memory: 128Mi
    requests:
      cpu: 100m
      memory: 128Mi
  
  env:
    - name: NODE_ENV
      value: ""
    - name: API_ROOT_URL
      value: ""      
    - name: DISABLE_USER_REGISTRATION
      value: ""
    - name: PORT
      value: ""
    - name: FRONT_BASE_URL
      value: ""
    - name: MONGO_URL
      value: ""
    - name: MONGO_MIN_POOL_SIZE
      value: ""
    - name: MONGO_MAX_POOL_SIZE
      value: ""
    - name: REDIS_HOST
      value: ""
    - name: REDIS_PORT
      value: ""
    - name: REDIS_PASSWORD
      value: ""
    - name: REDIS_DB_INDEX
      value: ""
    - name: REDIS_CACHE_SERVICE_HOST
      value: ""
    - name: REDIS_CACHE_SERVICE_PORT
      value: ""
    - name: S3_LOCAL_STACK
      value: ""
    - name: S3_BUCKET_NAME
      value: ""
    - name: S3_REGION
      value: ""
    - name: AWS_ACCESS_KEY_ID
      value: ""
    - name: AWS_SECRET_ACCESS_KEY
      value: ""
    - name: STORE_ENCRYPTION_KEY
      value: ""
    - name: SENTRY_DSN
      value: ""
    - name: NEW_RELIC_APP_NAME
      value: ""
    - name: NEW_RELIC_LICENSE_KEY
      value: ""
    - name: BROADCAST_QUEUE_CHUNK_SIZE
      value: ""
    - name: MULTICAST_QUEUE_CHUNK_SIZE
      value: ""


  livenessProbe:
    httpGet:
      path: /
      port: http
  readinessProbe:
    httpGet:
      path: /
      port: http

  autoscaling:
    enabled: false
    minReplicas: 1
    maxReplicas: 100
    targetCPUUtilizationPercentage: 80
    # targetMemoryUtilizationPercentage: 80

  # Additional volumes on the output Deployment definition.
  volumes: []
  # - name: foo
  #   secret:
  #     secretName: mysecret
  #     optional: false

  # Additional volumeMounts on the output Deployment definition.
  volumeMounts: []
  # - name: foo
  #   mountPath: "/etc/foo"
  #   readOnly: true

  nodeSelector: {}

  tolerations: []

  affinity: {}

widget:
  enabled: false
  replicaCount: 1
  image:
    repository: ghcr.io/novuhq/novu/widget
    pullPolicy: IfNotPresent
    tag: "2.0.1"

  imagePullSecrets: []
  nameOverride: ""
  fullnameOverride: ""

  serviceAccount:
    # Specifies whether a service account should be created
    create: true
    # Automatically mount a ServiceAccount's API credentials?
    automount: true
    # Annotations to add to the service account
    annotations: {}
    # The name of the service account to use.
    # If not set and create is true, a name is generated using the fullname template
    name: ""

  podAnnotations: {}
  podLabels: {}

  podSecurityContext: {}
    # fsGroup: 2000

  securityContext: {}
    # capabilities:
    #   drop:
    #   - ALL
    # readOnlyRootFilesystem: true
    # runAsNonRoot: true
    # runAsUser: 1000

  service:
    type: ClusterIP
    port: 3000

  ingress:
    enabled: false
    className: ""
    annotations: {}
      # kubernetes.io/ingress.class: nginx
      # kubernetes.io/tls-acme: "true"
    hosts:
      - host: chart-example.local
        paths:
          - path: /
            pathType: ImplementationSpecific
    tls: []
    #  - secretName: chart-example-tls
    #    hosts:
    #      - chart-example.local

  resources: 
    # We usually recommend not to specify default resources and to leave this as a conscious
    # choice for the user. This also increases chances charts run on environments with little
    # resources, such as Minikube. If you do want to specify resources, uncomment the following
    # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
    limits:
      cpu: 100m
      memory: 128Mi
    requests:
      cpu: 100m
      memory: 128Mi
  
  env:
    - name: NODE_ENV
      value: ""
    - name: API_ROOT_URL
      value: ""      
    - name: DISABLE_USER_REGISTRATION
      value: ""
    - name: PORT
      value: ""
    - name: FRONT_BASE_URL
      value: ""
    - name: MONGO_URL
      value: ""
    - name: MONGO_MIN_POOL_SIZE
      value: ""
    - name: MONGO_MAX_POOL_SIZE
      value: ""
    - name: REDIS_HOST
      value: ""
    - name: REDIS_PORT
      value: ""
    - name: REDIS_PASSWORD
      value: ""
    - name: REDIS_DB_INDEX
      value: ""
    - name: REDIS_CACHE_SERVICE_HOST
      value: ""
    - name: REDIS_CACHE_SERVICE_PORT
      value: ""
    - name: S3_LOCAL_STACK
      value: ""
    - name: S3_BUCKET_NAME
      value: ""
    - name: S3_REGION
      value: ""
    - name: AWS_ACCESS_KEY_ID
      value: ""
    - name: AWS_SECRET_ACCESS_KEY
      value: ""
    - name: STORE_ENCRYPTION_KEY
      value: ""
    - name: SENTRY_DSN
      value: ""
    - name: NEW_RELIC_APP_NAME
      value: ""
    - name: NEW_RELIC_LICENSE_KEY
      value: ""
    - name: BROADCAST_QUEUE_CHUNK_SIZE
      value: ""
    - name: MULTICAST_QUEUE_CHUNK_SIZE
      value: ""


  livenessProbe:
    httpGet:
      path: /
      port: http
  readinessProbe:
    httpGet:
      path: /
      port: http

  autoscaling:
    enabled: false
    minReplicas: 1
    maxReplicas: 100
    targetCPUUtilizationPercentage: 80
    # targetMemoryUtilizationPercentage: 80

  # Additional volumes on the output Deployment definition.
  volumes: []
  # - name: foo
  #   secret:
  #     secretName: mysecret
  #     optional: false

  # Additional volumeMounts on the output Deployment definition.
  volumeMounts: []
  # - name: foo
  #   mountPath: "/etc/foo"
  #   readOnly: true

  nodeSelector: {}

  tolerations: []

  affinity: {}


  